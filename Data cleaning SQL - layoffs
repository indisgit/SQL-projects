--data_cleaning

select *
from layoffs;

-- create staging raw table

create table layoffs_staging
LIKE layoffs;

select *
from layoffs_staging;

INSERT into layoffs_staging
select *
from layoffs;

select *
from layoffs_staging;

-- 1. removing duplicates
WITH duplicate_CTE as
(select *, 
row_number() over(
partition by company, location, industry, total_laid_off, percentage_laid_off,
 `date`, stage, country, funds_raised_millions) as row_num
from layoffs_staging)
SELECT*
FROM duplicate_CTE;

-- DELETE 
-- FROM duplicate_CTE
-- where row_num > 1; -- will not work! thats why create new table 

CREATE TABLE `layoffs_staging2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `row_num` INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

select *
from layoffs_staging2;

insert into layoffs_staging2
select *, 
row_number() over(
partition by company, location, industry, total_laid_off, percentage_laid_off,
 `date`, stage, country, funds_raised_millions) as row_num
from layoffs_staging;

select *
from layoffs_staging2
where row_num>1;

delete 
from layoffs_staging2
where row_num>1;

-- standardizing data

select company, TRIM(company)
from layoffs_staging2;

update layoffs_staging2
set company = TRIM(company);

select *
from layoffs_staging2
where industry like 'Crypto%';

select *
from layoffs_staging2
where industry like 'Crypto%';

update layoffs_staging2
set industry = 'Crypto'
where industry like 'Crypto%';

select distinct country, trim(trailing '.' from country )
from layoffs_staging2
order by 1;

update layoffs_staging2
set country = trim(trailing '.' from country)
where country like 'United States%';

select `date`, 
str_to_date(`date`, '%m/%d/%Y')
from layoffs_staging2;

update layoffs_staging2
set `date`= str_to_date(`date`, '%m/%d/%Y');

alter table layoffs_staging2
modify column `date` DATE;

-- NULL, BLANK 
select *
from layoffs_staging2
where total_laid_off is null
and percentage_laid_off is null;


select *
from layoffs_staging2
where industry is null
or industry = '';

select *
from layoffs_staging2
where company = 'Airbnb';


update layoffs_staging2
set industry = null
where industry = '';

select t1.industry, t2.industry
from layoffs_staging2 t1
join layoffs_staging2 t2
  ON t1.company=t2.company
where (t1.industry is null or t1.industry= '')
and t2.industry is not null;

update layoffs_staging2 t1
join layoffs_staging2 t2
	ON t1.company=t2.company
set t1.industry=t2.industry
where t1.industry is null
and t2.industry is not null;

select *
from layoffs_staging2
where industry is null or industry= '';

select *
from layoffs_staging2
where total_laid_off is null
and percentage_laid_off is null;

delete
from layoffs_staging2
where total_laid_off is null
and percentage_laid_off is null;

select *
from layoffs_staging2
where total_laid_off is null
and percentage_laid_off is null;

select *
from layoffs_staging2;
-- deleting unnecessary columns
alter table layoffs_staging2
drop column row_num;



